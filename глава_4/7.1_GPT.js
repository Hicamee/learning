// –§–ª–∞–≥–∏ —Å–≤–æ–π—Å—Ç–≤
// –ü–æ–º–∏–º–æ –∑–Ω–∞—á–µ–Ω–∏—è value, —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–∞ (—Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–µ ¬´—Ñ–ª–∞–≥–∏¬ª).
// writable ‚Äì –µ—Å–ª–∏ true, —Å–≤–æ–π—Å—Ç–≤–æ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å, –∏–Ω–∞—á–µ –æ–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.
// enumerable ‚Äì –µ—Å–ª–∏ true, —Å–≤–æ–π—Å—Ç–≤–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ—Ç—Å—è –≤ —Ü–∏–∫–ª–∞—Ö, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Ü–∏–∫–ª—ã –µ–≥–æ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç.
// configurable ‚Äì –µ—Å–ª–∏ true, —Å–≤–æ–π—Å—Ç–≤–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –∞ —ç—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç—ã –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å, –∏–Ω–∞—á–µ —ç—Ç–æ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.


// 1. üîí –°–¥–µ–ª–∞–π —Å–≤–æ–π—Å—Ç–≤–æ username –æ–±—ä–µ–∫—Ç–∞ user –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.
const user = {}

Object.defineProperty(user, "username", {
    value: "John"
})

user.username = "Oleg"
let res1 = Object.getOwnPropertyDescriptor(user, "username");
console.log(JSON.stringify(res1, null, 2));


// 2. üîç –î–æ–±–∞–≤—å –∫ –æ–±—ä–µ–∫—Ç—É book —Å–≤–æ–π—Å—Ç–≤–æ hiddenNote —Å–æ 
// –∑–Ω–∞—á–µ–Ω–∏–µ–º "secret", –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ for..in –∏ Object.keys.

const book = {
    numver: 2,
}

Object.defineProperty(book, "hiddenNote", {
    value: "secret",

})

for (key in book)
    console.log(key);
console.log(Object.keys(book));


// 3. üö´ –°–¥–µ–ª–∞–π —Å–≤–æ–π—Å—Ç–≤–æ email –æ–±—ä–µ–∫—Ç–∞ account —Ç–∞–∫–∏–º, —á—Ç–æ–±—ã –µ–≥–æ
// –Ω–µ–ª—å–∑—è –±—ã–ª–æ —É–¥–∞–ª–∏—Ç—å, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Å—ë –µ—â—ë –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å.

const account = {
    email: "nety",
}

Object.defineProperty(account, "email", {
    value: "nety",
    writable: true,
    configurable: false,
    enumerable: true,
})

account.email = "Est"
delete account.email
console.log(account.email);


// 4. üß± –ó–∞–ø—Ä–µ—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –≤ –æ–±—ä–µ–∫—Ç settings.

const settings = {
    name: "Maks",
}

Object.preventExtensions(settings)
settings.name = "Kirill"
settings[user] = "Misha"
console.log(settings);


// 5. üì¶ –ö–ª–æ–Ω–∏—Ä—É–π –æ–±—ä–µ–∫—Ç profile, —Å–æ—Ö—Ä–∞–Ω–∏–≤ –≤—Å–µ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã
// —Å–≤–æ–π—Å—Ç–≤, –≤–∫–ª—é—á–∞—è writable, enumerable, configurable.

let profile = {
    name: "Alice"
};

let clone = Object.defineProperties({}, Object.getOwnPropertyDescriptors(profile))
console.log(clone);


// üîß –ó–∞–¥–∞–Ω–∏–µ 6. "–ú–æ–ª—á–∞–ª–∏–≤—ã–π —à–ø–∏–æ–Ω"
// –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç spy, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Å–∫—Ä—ã—Ç–æ–µ –Ω–µ–ø–µ—Ä–µ—á–∏—Å–ª–∏–º–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ logs (–º–∞—Å—Å–∏–≤), 
// –∏ –º–µ—Ç–æ–¥ track(msg), –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤.

// –ü—Ä–∏ —ç—Ç–æ–º:
// logs –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω –≤ for..in, Object.keys, JSON.stringify.
// track() –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—ã—á–Ω—ã–º –º–µ—Ç–æ–¥–æ–º –æ–±—ä–µ–∫—Ç–∞.

// –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
// spy.track("Start");
// spy.track("Next");
// console.log(spy.logs); // ["Start", "Next"]
// for (let key in spy) console.log(key); // —Ç–æ–ª—å–∫–æ track

const spy = {
    logs: [],
}

Object.defineProperty(spy, "logs", {
    enumerable: false,
})

spy.track = function (msg) {
    this.logs.push(msg)
    return this.logs
}

spy.track("Start");
spy.track("Next");
console.log(spy.logs); // ["Start", "Next"]
for (let key in spy) console.log(key); // —Ç–æ–ª—å–∫–æ track


// üîê –ó–∞–¥–∞–Ω–∏–µ 7. "–ù–µ—É–¥–∞–ª—è–µ–º—ã–π, –Ω–æ –∏–∑–º–µ–Ω—è–µ–º—ã–π"
// –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç config, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å:
// —Å–≤–æ–π—Å—Ç–≤–æ mode = "dark",

// –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:
// –∏–∑–º–µ–Ω—è–µ–º—ã–º
// –Ω–µ–ø–µ—Ä–µ—á–∏—Å–ª–∏–º—ã–º
// –Ω–µ—É–¥–∞–ª—è–µ–º—ã–º

// –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –æ–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ:
// –Ω–µ –≤–∏–¥–Ω–æ –≤ for..in
// –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ config.mode = 'light'
// –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è

const config = {}

Object.defineProperty(config, "mode", {
    value: "dark",
    writable: true,
    enumerable: false,
    configurable: false,
})

config.mode = "light"
delete config.mode
for (key in config) {
    console.log(key);
}

console.log(config);


// –ó–∞–¥–∞–Ω–∏–µ 8. "–ì–ª—É–±–æ–∫–∏–π –∫–ª–æ–Ω —Å–æ –≤—Å–µ–º–∏ —Ñ–ª–∞–≥–∞–º–∏"
// –î–∞–Ω –æ–±—ä–µ–∫—Ç original, –≤ –∫–æ—Ç–æ—Ä–æ–º:

// visible ‚Äî –æ–±—ã—á–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
// hidden ‚Äî –Ω–µ–ø–µ—Ä–µ—á–∏—Å–ª–∏–º–æ–µ, writable: false, configurable: false
// –°–æ–∑–¥–∞–π —Ç–æ—á–Ω—É—é –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ clone, –≥–¥–µ –≤—Å–µ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º.

// –ü—Ä–æ–≤–µ—Ä—å:
// clone.hidden —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
// clone.visible === 'yes'
// hidden –Ω–µ –≤–∏–¥–µ–Ω –≤ for..in, –∏ –µ–≥–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å

const original = {};
Object.defineProperty(original, 'visible', {
    value: 'yes',
    writable: true,
    enumerable: true,
    configurable: true
});
Object.defineProperty(original, 'hidden', {
    value: 'secret',
    writable: false,
    enumerable: false,
    configurable: false
});


const clone2 = Object.defineProperties({}, Object.getOwnPropertyDescriptors(original))

console.log(clone2);
console.log(clone2.visible === 'yes');
for (key in clone2) {
    console.log(key);
}
