// üß© –ó–∞–¥–∞–Ω–∏–µ 1. –û–±—ä–µ–∫—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
// –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Person(name), –∫–æ—Ç–æ—Ä–∞—è:

// —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç name –≤ this.name, –µ—Å–ª–∏ –∏–º—è –ø–µ—Ä–µ–¥–∞–Ω–æ

// –µ—Å–ª–∏ –∏–º—è –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç this.name = "–ê–Ω–æ–Ω–∏–º"

function Person(name) {
    if (name === '' || typeof (name) !== 'string') {
        this.name = '–ê–Ω–æ–Ω–∏–º'
    } else {
        this.name = name
    }
}

let p1 = new Person("–ú–∞—à–∞");
let p2 = new Person();

console.log(p1.name); // –ú–∞—à–∞
console.log(p2.name); // –ê–Ω–æ–Ω–∏–º


// üß© –ó–∞–¥–∞–Ω–∏–µ 2. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –∞–≤—Ç–æ-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º
// –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä User, –∫–æ—Ç–æ—Ä–∞—è:

// –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è

// –∫–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id (1, 2, 3, ‚Ä¶)


let userId = 0;
function User(name) {
    userId++
    this.name = name
    this.id = userId
}

let u1 = new User("Ann");
let u2 = new User("Bob");

console.log(u1.id); // 1
console.log(u2.id); // 2


// üß© –ó–∞–¥–∞–Ω–∏–µ 3. –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–±—ã–≤—á–∏–≤–æ—Å—Ç–∏
// –°–æ–∑–¥–∞–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Car(model), –∫–æ—Ç–æ—Ä—ã–π:

// —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –±–µ–∑ new

// –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç this.model = model

function Car(model) {
    if (!new.target) {
        return new Car(model)
    }
    this.model = model
}


let c1 = Car("BMW");
console.log(c1.model); // BMW

let c2 = new Car("Audi");
console.log(c2.model); // Audi



// üß© –ó–∞–¥–∞–Ω–∏–µ 4. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ª–æ–≥–∏–∫–æ–π –≤–Ω—É—Ç—Ä–∏
// –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Circle(radius), –∫–æ—Ç–æ—Ä–∞—è:

// —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç radius

// –¥–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ getArea() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ œÄ * r^2

// –æ–∫—Ä—É–≥–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤


function Circle(radius) {
    this.radius = radius

    this.getArea = function () {
        let r = Math.PI * this.radius * this.radius
        return (r.toFixed(2))
    }
}


let circle = new Circle(3);

console.log(circle.radius);      // 3
console.log(circle.getArea());  // 28.27 (–ø—Ä–∏–º–µ—Ä–Ω–æ)




