// 1. –°—á—ë—Ç—á–∏–∫ (Counter)
// –ó–∞–¥–∞—á–∞:
// –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç counter, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å:

// –°–≤–æ–π—Å—Ç–≤–æ value (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0)

// –ú–µ—Ç–æ–¥ inc() ‚Äî —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1

// –ú–µ—Ç–æ–¥ dec() ‚Äî —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞ 1

// –ú–µ—Ç–æ–¥ reset() ‚Äî –æ–±–Ω—É–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ

// –ú–µ—Ç–æ–¥ show() ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤ alert –∏–ª–∏ console.log)

// –í—Å–µ –º–µ—Ç–æ–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç this –¥–ª—è —Ü–µ–ø–æ—á–µ–∫

// üî∏ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:


let counter = {
    value: 0,
    inc() {
        this.value++
        return this;
    },
    dec() {
        this.value--
        return this;
    },
    reset() {
        this.value = 0
        return this;
    },
    show() {
        console.log(this.value);
        return this;
    },
}


// counter.inc().inc().show().dec().show().reset().show();



// 2. –¢–∞–π–º–µ—Ä (Timer)
// –ó–∞–¥–∞—á–∞:
// –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç timer, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç:

// –ú–µ—Ç–æ–¥ start(seconds) ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–∞–π–º–µ—Ä –∏ –≤—ã–≤–æ–¥–∏—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç –≤ –∫–æ–Ω—Å–æ–ª—å (–æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É)

// –ú–µ—Ç–æ–¥ stop() ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä

// –ú–µ—Ç–æ–¥ reset() ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä –≤ 0

// –ò—Å–ø–æ–ª—å–∑—É–π this –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ setInterval

// üî∏ –ü—Ä–∏–º–µ—Ä:
// timer.start(5);
// ‚Üí 5
// ‚Üí 4
// ‚Üí 3
// ‚Üí 2
// ‚Üí 1
// ‚Üí 0

const timer = {
    sec: 0,
    intervalId: null,
    start(second) {
        this.sec = second;
        this.intervalId = setInterval(() => {
            console.log(this.sec);
            this.sec--
            if (this.sec < 0) {
                clearInterval(this.intervalId);
            }
        }, 1000)
        return this
    },
    stop() {
        clearInterval(this.intervalId)
        this.intervalId = null
        return this
    },
    reset() {
        this.stop();       // –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º stop
        this.sec = 0;
        return this;
    },
}


// timer.start(5)
// timer.stop()
// timer.reset()
// timer.start(5).stop().reset()





// 3. –ú–∏–Ω–∏-–±–∞–Ω–∫ (BankAccount)
// –ó–∞–¥–∞—á–∞:

// –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç bank, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å:

// –°–≤–æ–π—Å—Ç–≤–æ balance (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)

// –ú–µ—Ç–æ–¥ deposit(amount) ‚Äî –ø–æ–ø–æ–ª–Ω—è–µ—Ç —Å—á—ë—Ç –Ω–∞ amount

// –ú–µ—Ç–æ–¥ withdraw(amount) ‚Äî —Å–Ω–∏–º–∞–µ—Ç —Å–æ —Å—á—ë—Ç–∞ —Å—É–º–º—É, –µ—Å–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤

// –ú–µ—Ç–æ–¥ showBalance() ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å

// –ú–µ—Ç–æ–¥ reset() ‚Äî –æ–±–Ω—É–ª—è–µ—Ç —Å—á—ë—Ç

// üî∏ –ü—Ä–∏–º–µ—Ä:


const bank = {
    balance: 0,
    deposit(amount) {
        this.balance += amount;
        return this;
    },
    withdraw(amount) {
        if (this.balance > amount) {
            this.balance -= amount;
        } else {
            console.log('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!');
        }
        return this;
    },
    showBalance() {
        console.log(this.balance);
        return this;
    },
    reset() {
        this.balance = 0;
        return this;
    },
}


// bank.deposit(100).withdraw(30).showBalance(); // ‚Üí 70
// bank.withdraw(1000); // ‚Üí –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
bank.deposit(100)
bank.withdraw(150)
bank.showBalance()